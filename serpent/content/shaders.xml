<shaders>
  <shader name="RandomColors">
    <parameters>
      <param name="R" type="float"/>
      <param name="G" type="float"/>
      <param name="B" type="float"/>
    </parameters>
    <vertex>
      <![CDATA[
            attribute vec3 Position;
            attribute vec4 Color;
            attribute vec2 TexCoord;
            attribute vec4 RenderData;
            attribute float Scale;
            attribute float R;
            attribute float G;
            attribute float B;
            varying vec4 Color0;
            varying vec2 TexCoord0;
            varying vec4 RenderDataOut;
            varying float ScaleOut;
            varying float r;
            varying float g;
            varying float b;
            uniform mat4 Transform;
            void main(void)
            {
                RenderDataOut = RenderData;
                ScaleOut = Scale;           // Passing data to fragment shader
                r = R;   // Passing data to fragment shader
                g = G;
                b = B;
                Color0 = Color;
                TexCoord0 = TexCoord;
                gl_Position = Transform * vec4(Position.xyz, 1.0);
            }
        ]]>
    </vertex>
    <fragment>
      <![CDATA[
            varying lowp vec4 Color0;
            varying mediump vec2 TexCoord0;
            varying lowp vec4 RenderDataOut;
            varying lowp float ScaleOut;
            varying lowp float r;
            varying lowp float g;
            varying lowp float b;
            uniform sampler2D Texture0;
            void main(void)
            {
                vec4 Color = Color0 * texture2D(Texture0, TexCoord0);
                Color.r *= r;
                Color.g *= g;
                Color.b *= b;
                gl_FragColor = Color;
            }
        ]]>
    </fragment>
  </shader>
</shaders>